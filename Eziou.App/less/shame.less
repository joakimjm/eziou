/**************************************************************
SHAME

The inspiration for the shame.css (less in this case - not to
be interpreted as “shameless”) comes from
http://csswizardry.com/2013/04/shame-css/

The general rules are:
1) If it’s a hack, it goes in shame.css.
2) Document all hacks fully:
	a) What part of the codebase does it relate to?
	b) Why was this needed?
	c) How does this fix it?
	d) How might you fix it properly, given more time?
3) Do not blame the developer; if they explained why they had to do it then their reasons are probably (hopefully) valid.
4) Try and clean shame.css up when you have some down time.
	a) Even better, get a tech-debt story in which you can dedicate actual sprint time to it.

Example:

-----------------------------------------------------------------------
 Nav specificity fix.

 Someone used an ID in the header code (`#header a{}`) which trumps the
 nav selectors (`.site-nav a{}`). Use !important to override it until I
 have time to refactor the header stuff.
-----------------------------------------------------------------------
.site-nav a {
    color: #BADA55 !important;
}

**************************************************************/

//For example, the g--fit has display: flex !important; and it breaks the ng-hide functionality.
.grid, .grid-cell {
    &[ng-cloak],
    &[data-ng-cloak],
    &.ng-hide {
        display: none !important;
    }
}

[ng-cloak],
[data-ng-cloak],
.ng-hide {
    display: none !important;
}
